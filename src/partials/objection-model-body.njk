/**
 * Generated by pg-generator. Don't modify code here.
 * See {@link ./templates/partials/objection-model-body.njk}
*/

/* eslint-disable require-jsdoc, max-len, global-require */
import { join } from 'path';
import { Model } from '{{ baseModel or library }}';
import * as models from '.';

{% if library === "schwifty" %}import Joi from "joi";{% endif %}

{% include "jsdoc.njk" -%}
export class {{ table | dboClassName(addSchemaName) }} extends Model {
  static tableName = {{ table.name | quote }};
  static idColumn = {{ table.primaryKey.columns | listAttribute("name", { quote: "double", wrap: "[]" }) }};

  {% include "class-fields.njk" %}

  static relationMappings = {
    {% for relation in table.o2mRelations -%}
    {{ relation.name | camelCase | plural }}: {
      relation: Model.HasManyRelation,
      modelClass: join(__dirname, '{{ relation.targetTable.name | classCase }}'),
      join: {
        from: {{ relation.foreignKey.referencedColumns | listAttribute("parentalName", { quote: "double", wrap: "[]" }) }},
        to: {{ relation.foreignKey.columns | listAttribute("parentalName", { quote: "double", wrap: "[]" }) }},
      }
    },
    {%- endfor %}
    {% for relation in table.m2oRelations -%}
    {{ relation.name | camelCase }}: {
      relation: Model.BelongsToOneRelation,
      modelClass: join(__dirname, '{{ relation.targetTable.name | classCase }}'),
      join: {
        from: {{ relation.foreignKey.columns | listAttribute("parentalName", { quote: "double", wrap: "[]" }) }},
        to: {{ relation.foreignKey.referencedColumns | listAttribute("parentalName", { quote: "double", wrap: "[]" }) }},
      }
    },
    {%- endfor %}
    {% for relation in table.m2mRelations -%}
    {{ relation.name | camelCase | plural }}: {
      relation: Model.ManyToManyRelation,
      modelClass: join(__dirname, '{{ relation.targetTable.name | classCase }}'),
      join: {
        from: {{ relation.foreignKey.referencedColumns | listAttribute("parentalName", { quote: "double", wrap: "[]" }) }},
        through: {
          modelClass: join(__dirname, '{{ relation.joinTable.name | classCase }}'),
          from: {{ relation.foreignKey.columns | listAttribute("parentalName", { quote: "double", wrap: "[]" }) }},
          to: {{ relation.targetForeignKey.columns | listAttribute("parentalName", { quote: "double", wrap: "[]" }) }},
        },
        to: {{ relation.targetForeignKey.referencedColumns | listAttribute("parentalName", { quote: "double", wrap: "[]" }) }},
      }
    },
    {%- endfor %}
  }
